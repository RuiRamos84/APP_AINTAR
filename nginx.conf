# Configuração NGINX - Produção com Detecção Automática de Falhas
# Servidor: app.aintar.pt
# Backend: 127.0.0.1:5000

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 12M;

    charset utf-8;
    charset_types text/plain text/xml application/json;

    # ========================================
    # UPSTREAM - Definição do Backend
    # ========================================
    upstream backend {
        server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
    }

    # ========================================
    # REDIRECIONAMENTOS IP -> DOMÍNIO
    # ========================================
    
    # HTTP: IP -> HTTPS domínio
    server {
        listen 80;
        server_name 83.240.148.114;
        return 301 https://app.aintar.pt$request_uri;
    }

    # HTTPS: IP -> HTTPS domínio
    server {
        listen 443 ssl;
        server_name 83.240.148.114;

        ssl_certificate D:/APP/NewAPP/nginx/ssl/app.aintar.pt.crt;
        ssl_certificate_key D:/APP/NewAPP/nginx/ssl/app.aintar.pt.key;

        return 301 https://app.aintar.pt$request_uri;
    }

    # ========================================
    # SERVIDOR HTTP (CERTIFICADOS + REDIRECT)
    # ========================================
    server {
        listen 80;
        server_name app.aintar.pt;

        # Let's Encrypt - Renovação certificados
        location ^~ /.well-known/acme-challenge/ {
            root D:/APP/NewAPP/nginx/html;
            try_files $uri =404;
        }

        # Resto -> HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ========================================
    # SERVIDOR PRINCIPAL HTTPS
    # ========================================
    server {
        listen 443 ssl;
        server_name app.aintar.pt;

        # SSL/TLS
        ssl_certificate D:/APP/NewAPP/nginx/ssl/app.aintar.pt.crt;
        ssl_certificate_key D:/APP/NewAPP/nginx/ssl/app.aintar.pt.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Frontend React
        root D:/APP/NewAPP/nginx/html/react-app/build;
        index index.html;

        # ========================================
        # MANUTENÇÃO - Páginas e Recursos
        # ========================================
        
        # Página de manutenção
        error_page 503 @maintenance;
        location @maintenance {
            root D:/APP/NewAPP/nginx/html;
            rewrite ^(.*)$ /maintenance.html break;
            internal;
        }

        # Recursos da página de manutenção
        location ~ ^/maintenance\.(html|css|js)$ {
            root D:/APP/NewAPP/nginx/html;
            internal;
        }

        # ========================================
        # VERIFICAÇÃO MODO MANUTENÇÃO
        # ========================================
        
        # Activar manutenção manual via ficheiro flag
        if (-f D:/APP/NewAPP/nginx/maintenance.flag) {
            return 503;
        }

        # ========================================
        # WEBHOOKS - Sempre Activos (PRIMEIRO)
        # ========================================
        location = /api/v1/payments/webhook {
            # Webhooks funcionam mesmo em manutenção
            proxy_pass http://backend/api/v1/payments/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Sem detecção automática - crítico
            proxy_connect_timeout 10s;
            proxy_read_timeout 30s;
        }

        # ========================================
        # API FILES - Upload/Download (SEGUNDO)
        # ========================================
        location /api/v1/files/ {
            # Manutenção manual
            if (-f D:/APP/NewAPP/nginx/maintenance.flag) {
                return 503;
            }
            
            # Proxy para backend
            proxy_pass http://backend/api/v1/files/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_request_headers on;
            
            # Detecção automática de falhas
            proxy_connect_timeout 3s;
            proxy_read_timeout 10s;
            proxy_intercept_errors on;
            error_page 502 503 504 @maintenance;
        }

        # ========================================
        # API REST - Backend Geral (TERCEIRO)
        # ========================================
        location /api/v1/ {
            # Manutenção manual
            if (-f D:/APP/NewAPP/nginx/maintenance.flag) {
                return 503;
            }
            
            # Proxy para backend
            proxy_pass http://backend/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Detecção automática de falhas
            proxy_connect_timeout 3s;
            proxy_read_timeout 10s;
            proxy_intercept_errors on;
            error_page 502 503 504 /maintenance.html;
        }

        # ========================================
        # WEBSOCKETS - Socket.io (QUARTO)
        # ========================================
        location /socket.io/ {
            # Manutenção manual
            if (-f D:/APP/NewAPP/nginx/maintenance.flag) {
                return 503;
            }
            
            # Proxy WebSocket
            proxy_pass http://backend;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            
            # Detecção automática (timeout maior para WS)
            proxy_connect_timeout 5s;
            proxy_intercept_errors on;
            error_page 502 503 504 @maintenance;
        }

        # ========================================
        # FICHEIROS PÚBLICOS (QUINTO)
        # ========================================
        location /publicfiles/ {
            alias D:/APP/NewAPP/publicfiles/; 
            charset utf-8;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;

            add_before_body /header.html;
            add_after_body /footer.html;
            auth_basic "Acesso Restrito";
            auth_basic_user_file D:/APP/NewAPP/nginx/htpasswd;
        }

        # Recursos do autoindex
        location = /header.html {
            root D:/APP/NewAPP/nginx/html;
        }

        location = /footer.html {
            root D:/APP/NewAPP/nginx/html;
        }

        location = /autoindex.css {
            root D:/APP/NewAPP/nginx/html;
        }

        # ========================================
        # IMAGENS ESTÁTICAS - Apenas React (SEXTO)
        # ========================================
        location ~ ^/static/.*\.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # ========================================
        # FRONTEND - REACT SPA (ÚLTIMO)
        # ========================================
        location / {
            try_files $uri /index.html;
        }
    }
    